% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getTrainTestSplit.R
\name{getTrainTestSplit}
\alias{getTrainTestSplit}
\title{A Train/Test Data Splitting Function}
\usage{
getTrainTestSplit(data, train_size = 0.7, shuffle = FALSE, random_state = NULL)
}
\arguments{
\item{data:}{Tibble or data frame that you want to split.}

\item{train_size:}{float or fraction between 0.0 and 1.0 that represents the proportion of data in
the train split. If it is not possible to split exactly, the train_size will be rounded down
(e.g. if 10 rows and train_size = 1/3, train set contains 3 rows, test set contains 7 rows).
train_size = 0 means all data is in the test set (training set is empty). train_size = 1 means
all data is in the training set (test set is empty). If train_size is not defined by the user,
it will be set the default value of 0.7 (7:3 train:test split).}

\item{shuffle:}{boolean, determines whether or not to shuffle the data before splitting.
The default is shuffle = FALSE. If a random_state is defined, shuffle is
automatically set to TRUE.}

\item{random_state:}{int, controls the shuffling applied to the data before the split is applied.
Set random_state for reproducible output across multiple function calls.
The default is random_state = NULL. If a random_state is defined, shuffle is automatically set to TRUE.}
}
\value{
A list of length 2 containing train-test split of input data.
Access training and test data using \code{variable$train} and \code{variable$test}, respectively.
}
\description{
Split data into training data and test data for machine learning.
}
\note{
Errors occur if:
\enumerate{
\item \code{data} is not a tibble or dataframe.
\item \code{data}, \code{train_size}, \code{shuffle}, or \code{random_state} are not the proper type.
\item \code{train_size} is not within range (less than 0 or greater than 1).
\item There are no rows in \code{data}
}
}
\examples{
# Let us assume our data is stored in the following dataframe:
data <- data.frame(x = 1:10, y = 11:20, letter = letters[1:10])

# Using default parameters (7:3 train-test split, no shuffling)
getTrainTestSplit(data) 

# Specified 8:2 train-test split
getTrainTestSplit(data, 0.8) 

# Shuffle prior to splitting
getTrainTestSplit(data, shuffle = TRUE)

# Generate reproducible shuffling using `random_state`
getTrainTestSplit(data, random_state = 123) 

}
